{"version":3,"sources":["/home/juan/front-angular-admin/front-admin/node_modules/primeng/fesm2015/primeng-inputtext.js"],"names":[],"mappings":"AAAA;;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAyBE;;;;;;;;wBAQsB,AAWrB;;;;;EAGD;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAOkB","file":"primeng-inputtext.js","sourcesContent":["import { ElementRef, Optional, HostListener, Directive, NgModule } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nlet InputText = class InputText {\n    constructor(el, ngModel) {\n        this.el = el;\n        this.ngModel = ngModel;\n    }\n    ngDoCheck() {\n        this.updateFilledState();\n    }\n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n    onInput(e) {\n        this.updateFilledState();\n    }\n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) ||\n            (this.ngModel && this.ngModel.model);\n    }\n};\nInputText.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgModel, decorators: [{ type: Optional }] }\n];\n__decorate([\n    HostListener('input', ['$event'])\n], InputText.prototype, \"onInput\", null);\nInputText = __decorate([\n    Directive({\n        selector: '[pInputText]',\n        host: {\n            '[class.ui-inputtext]': 'true',\n            '[class.ui-corner-all]': 'true',\n            '[class.ui-state-default]': 'true',\n            '[class.ui-widget]': 'true',\n            '[class.ui-state-filled]': 'filled'\n        }\n    }),\n    __param(1, Optional())\n], InputText);\nlet InputTextModule = class InputTextModule {\n};\nInputTextModule = __decorate([\n    NgModule({\n        imports: [CommonModule],\n        exports: [InputText],\n        declarations: [InputText]\n    })\n], InputTextModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InputText, InputTextModule };\n"]}