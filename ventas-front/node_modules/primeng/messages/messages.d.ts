import { OnInit, OnDestroy, EventEmitter } from '@angular/core';
import { Message } from 'primeng/api';
import { MessageService } from 'primeng/api';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare class Messages implements OnInit, OnDestroy {
    messageService: MessageService;
    value: Message[];
    closable: boolean;
    style: any;
    styleClass: string;
    enableService: boolean;
    key: string;
    escape: boolean;
    showTransitionOptions: string;
    hideTransitionOptions: string;
    valueChange: EventEmitter<Message[]>;
    messageSubscription: Subscription;
    clearSubscription: Subscription;
    constructor(messageService: MessageService);
    ngOnInit(): void;
    hasMessages(): boolean;
    getSeverityClass(): string;
    clear(event: any): void;
    readonly icon: string;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Messages>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Messages, "p-messages", never, {
    "closable": "closable";
    "enableService": "enableService";
    "escape": "escape";
    "showTransitionOptions": "showTransitionOptions";
    "hideTransitionOptions": "hideTransitionOptions";
    "value": "value";
    "style": "style";
    "styleClass": "styleClass";
    "key": "key";
}, {
    "valueChange": "valueChange";
}, never>;
}
export declare class MessagesModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<MessagesModule, [typeof Messages], [typeof ɵngcc1.CommonModule], [typeof Messages]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<MessagesModule>;
}

//# sourceMappingURL=messages.d.ts.map