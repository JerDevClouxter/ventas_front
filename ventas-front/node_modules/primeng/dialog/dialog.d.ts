import { ElementRef, OnDestroy, EventEmitter, Renderer2, QueryList, NgZone, ChangeDetectorRef } from '@angular/core';
import { AnimationEvent } from '@angular/animations';
import { Header } from 'primeng/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
export declare class Dialog implements OnDestroy {
    el: ElementRef;
    renderer: Renderer2;
    zone: NgZone;
    private cd;
    header: string;
    draggable: boolean;
    resizable: boolean;
    positionLeft: number;
    positionTop: number;
    contentStyle: any;
    modal: boolean;
    closeOnEscape: boolean;
    dismissableMask: boolean;
    rtl: boolean;
    closable: boolean;
    responsive: boolean;
    appendTo: any;
    styleClass: string;
    showHeader: boolean;
    breakpoint: number;
    blockScroll: boolean;
    autoZIndex: boolean;
    baseZIndex: number;
    minX: number;
    minY: number;
    focusOnShow: boolean;
    maximizable: boolean;
    keepInViewport: boolean;
    focusTrap: boolean;
    transitionOptions: string;
    closeIcon: string;
    minimizeIcon: string;
    maximizeIcon: string;
    headerFacet: QueryList<Header>;
    footerFacet: QueryList<Header>;
    headerViewChild: ElementRef;
    contentViewChild: ElementRef;
    footerViewChild: ElementRef;
    onShow: EventEmitter<any>;
    onHide: EventEmitter<any>;
    visibleChange: EventEmitter<any>;
    _visible: boolean;
    maskVisible: boolean;
    container: HTMLDivElement;
    wrapper: HTMLElement;
    dragging: boolean;
    documentDragListener: any;
    documentKeydownListener: any;
    documentDragEndListener: any;
    resizing: boolean;
    documentResizeListener: any;
    documentResizeEndListener: any;
    documentEscapeListener: Function;
    maskClickListener: Function;
    lastPageX: number;
    lastPageY: number;
    preventVisibleChangePropagation: boolean;
    maximized: boolean;
    preMaximizeContentHeight: number;
    preMaximizeContainerWidth: number;
    preMaximizeContainerHeight: number;
    preMaximizePageX: number;
    preMaximizePageY: number;
    id: string;
    _style: any;
    _position: string;
    originalStyle: any;
    transformOptions: any;
    constructor(el: ElementRef, renderer: Renderer2, zone: NgZone, cd: ChangeDetectorRef);
    visible: any;
    style: any;
    position: string;
    focus(): void;
    close(event: Event): void;
    enableModality(): void;
    disableModality(): void;
    maximize(): void;
    unbindMaskClickListener(): void;
    moveOnTop(): void;
    getWrapperClass(): {
        'ui-widget-overlay ui-dialog-mask': boolean;
        'ui-dialog-mask-scrollblocker': boolean;
    };
    getPositionClass(): string;
    initDrag(event: MouseEvent): void;
    onKeydown(event: KeyboardEvent): void;
    onDrag(event: MouseEvent): void;
    endDrag(event: MouseEvent): void;
    initResize(event: MouseEvent): void;
    onResize(event: MouseEvent): void;
    onResizeEnd(): void;
    bindGlobalListeners(): void;
    unbindGlobalListeners(): void;
    bindDocumentKeydownListener(): void;
    unbindDocumentKeydownListener(): void;
    bindDocumentDragListener(): void;
    unbindDocumentDragListener(): void;
    bindDocumentDragEndListener(): void;
    unbindDocumentDragEndListener(): void;
    bindDocumentResizeListeners(): void;
    unbindDocumentResizeListeners(): void;
    bindDocumentEscapeListener(): void;
    unbindDocumentEscapeListener(): void;
    appendContainer(): void;
    restoreAppend(): void;
    onAnimationStart(event: AnimationEvent): void;
    onAnimationEnd(event: AnimationEvent): void;
    onContainerDestroy(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Dialog>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Dialog, "p-dialog", never, {
    "draggable": "draggable";
    "resizable": "resizable";
    "closeOnEscape": "closeOnEscape";
    "closable": "closable";
    "showHeader": "showHeader";
    "blockScroll": "blockScroll";
    "autoZIndex": "autoZIndex";
    "baseZIndex": "baseZIndex";
    "minX": "minX";
    "minY": "minY";
    "focusOnShow": "focusOnShow";
    "keepInViewport": "keepInViewport";
    "focusTrap": "focusTrap";
    "transitionOptions": "transitionOptions";
    "closeIcon": "closeIcon";
    "minimizeIcon": "minimizeIcon";
    "maximizeIcon": "maximizeIcon";
    "responsive": "responsive";
    "breakpoint": "breakpoint";
    "visible": "visible";
    "style": "style";
    "position": "position";
    "header": "header";
    "positionLeft": "positionLeft";
    "positionTop": "positionTop";
    "contentStyle": "contentStyle";
    "modal": "modal";
    "dismissableMask": "dismissableMask";
    "rtl": "rtl";
    "appendTo": "appendTo";
    "styleClass": "styleClass";
    "maximizable": "maximizable";
}, {
    "onShow": "onShow";
    "onHide": "onHide";
    "visibleChange": "visibleChange";
}, ["headerFacet", "footerFacet"]>;
}
export declare class DialogModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DialogModule, [typeof Dialog], [typeof ɵngcc1.CommonModule], [typeof Dialog, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DialogModule>;
}

//# sourceMappingURL=dialog.d.ts.map